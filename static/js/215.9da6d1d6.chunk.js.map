{"version":3,"file":"static/js/215.9da6d1d6.chunk.js","mappings":"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","sources":["pages/TecoTecoPage/sections/HeroSection.tsx","pages/TecoTecoPage/sections/IntroSection.tsx","pages/TecoTecoPage/utils/constants.ts","pages/TecoTecoPage/sections/ExperienceSection.tsx","pages/TecoTecoPage/sections/HowWeRollSection.tsx","pages/TecoTecoPage/sections/JourneySection.tsx","pages/TecoTecoPage/utils/helpers.ts","pages/TecoTecoPage/sections/MembersSection.tsx","pages/TecoTecoPage/sections/ReviewsSection.tsx","pages/TecoTecoPage/sections/FaqJoinSection.tsx","pages/TecoTecoPage/TecoTecoPage.tsx"],"sourcesContent":["// src/pages/TecoTecoPage/sections/HeroSection.tsx\nimport React from 'react';\nimport './HeroSection.css';\n\ninterface HeroSectionProps {\n    onCtaClick: () => void;\n}\n\nexport const HeroSection: React.FC<HeroSectionProps> = ({ onCtaClick }) => {\n    return (\n        <section className=\"tecoteco-hero-section\">\n            <div className=\"hero-content\">\n                <h1 className=\"hero-title\">💯 코테 스터디 <br/> 테코테코</h1>\n                <p className=\"hero-subtitle\">\n                    변화 속에서 <br/> <span className=\"highlight\">변치 않는 ____를 찾다 <br/> </span>\n                </p>\n                <div className=\"hero-image-wrapper\">\n                    <img src={process.env.PUBLIC_URL + '/images/tecoteco/profile1.svg'} alt=\"테코테코 프로필 이미지\" />\n                </div>\n            </div>\n\n            {/* 새로운 정보 박스 섹션 추가 */}\n            <div className=\"hero-info-box\">\n                <div className=\"info-section-header\"> TecoTeco: 함께 성장할 용기</div>\n                <div className=\"info-content-area\">\n                    <div className=\"info-line-item\">\n                        <span className=\"line-icon\">💡</span>\n                        <p className=\"line-text\">\n                            기술 변화 속 <span className=\"highlight\">흔들리지 않는 개발자 사고의 뿌리</span>를 탐구해요.\n                        </p>\n                    </div>\n                    <div className=\"info-line-item\">\n                        <span className=\"line-icon\">📚</span>\n                        <p className=\"line-text\">\n                            단순한 코딩 테스트 넘어, <span className=\"highlight\">자료구조와 알고리즘의 본질</span>에 Deep Dive 해요.\n                        </p>\n                    </div>\n                    <div className=\"info-line-item\">\n                        <span className=\"line-icon\">🤝</span>\n                        <p className=\"line-text\">\n                            서로의 질문이 <span className=\"highlight\">해답</span>이 되고, <span className=\"highlight\">함께 성장</span>하는 시너지를 경험해요.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};","// src/pages/TecoTecoPage/sections/IntroSection.tsx\nimport React, { forwardRef } from 'react';\nimport './IntroSection.css';\n\nexport const IntroSection = forwardRef<HTMLDivElement>((props, ref) => {\n    return (\n        <section className=\"tecoteco-intro-section\" ref={ref}>\n            {/* 상단 태그 헤더 */}\n            <div className=\"section-tag-header\">TecoTeco 소개</div>\n\n            {/* 메인 타이틀 */}\n            <h2 className=\"section-title\">변화하는 세상에서 <br/>흔들리지 않을 '나'를 위한 스터디</h2>\n\n            {/* 본문 1: 현재 상황에 대한 공감과 질문 */}\n            <p>\n                코딩과 지식의 가치가 흔해지는 시절입니다. AI가 순식간에 코드를 작성하고,\n                개발 도구들이 날마다 진화하는 지금. 개발자로서 우리가 정말 집중해야 할 것은 무엇일까요?\n            </p>\n            <p>\n                TecoTeco는 이런 질문에서 출발했습니다. 기술이 아무리 발달해도\n                <span className=\"highlight\">변하지 않는 개발자의 핵심 역량</span>이 있다고 믿거든요.\n            </p>\n\n            {/* 우리의 접근법 1: 물고기 잡는 법 */}\n            <h3 className=\"intro-sub-heading\">물고기를 잡는 방법을 익히는 것</h3>\n            <p>\n                우리는 '물고기 그 자체'가 아닌, <span className=\"subtle-highlight\">'물고기를 잡는 방법'</span>에 집중합니다.\n                단순히 문제를 푸는 것을 넘어서, 문제의 본질을 이해하고\n                <span className=\"subtle-highlight\">견고한 사고력과 논리력</span>을 단련하는 것이 목표입니다.\n            </p>\n            <p>\n                매주 함께 모여 한 문제를 깊이 파고들고, 서로 다른 관점으로 접근해보며\n                사고의 폭을 넓혀갑니다. 왜 이 알고리즘을 선택했는지, 다른 방법은 없었는지,\n                이 문제에서 배울 수 있는 더 큰 인사이트는 무엇인지 함께 고민해요.\n            </p>\n\n            {/* 우리의 접근법 2: 물고기를 '잘' 잡는 법 */}\n            <h3 className=\"intro-sub-heading\">물고기를 '잘' 잡는 방법을 모색하는 것</h3>\n            <p>\n                AI를 배척하지 않고 <span className=\"subtle-highlight\">현명하게 활용하는 방법</span>을 함께 모색합니다.\n                AI와 페어 코딩하고, 비판적으로 분석하며 코드를 개선합니다.\n                AI가 <span className=\"subtle-highlight\">우리의 통찰력을 확장시키는 강력한 파트너</span>가 될 수 있음을\n                증명해나가고 있어요.\n            </p>\n\n            {/* 마무리 */}\n            <p className=\"section-cta-text\">\n                우리가 찾는 건 변화 속에서도 <span className=\"highlight\">흔들리지 않을 '나'</span><br/> 생각하는 힘이에요.\n            </p>\n        </section>\n    );\n});","// src/pages/TecoTecoPage/utils/constants.ts\n\nimport { Contributor, Review, FAQItem, StepContent } from './types';\n\n\nexport const tecotecoMembers: Contributor[] = [\n    {\n        name: \"renechoi\",\n        githubId: \"renechoi\",\n        imageUrl: process.env.PUBLIC_URL + '/images/face/rene.png',\n        tecotecoContribution: \"모임을 처음 시작한 사람 🏆\",\n        joinDate: \"2024-09-01\"\n    },\n    {\n        name: \"kdelay\",\n        githubId: \"kdelay\",\n        imageUrl: process.env.PUBLIC_URL + '/images/face/kdelay.png',\n        tecotecoContribution: \"꼼꼼한 코드 리뷰어 📝\",\n        joinDate: \"2024-09-01\"\n    },\n    {\n        name: \"KrongDev\",\n        githubId: \"KrongDev\",\n        imageUrl: 'https://avatars.githubusercontent.com/u/138358867?s=40&v=4',\n        tecotecoContribution: \"알고리즘 문제 해결사 💬\",\n        joinDate: \"2024-09-01\"\n    },\n    {\n        name: \"탁형\",\n        githubId: \"탁형\",\n        imageUrl: process.env.PUBLIC_URL + '/images/face/xxx.png',\n        tecotecoContribution: \"복잡한 개념도 쉽게 설명하는 멘토 📚\",\n        joinDate: \"2024-09-01\"\n    },\n    {\n        name: \"민수\",\n        githubId: \"minsu\",\n        imageUrl: process.env.PUBLIC_URL + '/images/face/xxx.png',\n        tecotecoContribution: \"새로운 알고리즘 트렌드를 가져오는 탐험가 🔍\",\n        joinDate: \"2024-10-15\"\n    },\n    {\n        name: \"지영\",\n        githubId: \"jiyoung\",\n        imageUrl: process.env.PUBLIC_URL + '/images/face/xxx.png',\n        tecotecoContribution: \"분위기 메이커이자 팀워크의 핵심 🎉\",\n        joinDate: \"2024-11-20\"\n    },\n    {\n        name: \"현우\",\n        githubId: \"hyunwoo\",\n        imageUrl: process.env.PUBLIC_URL + '/images/face/xxx.png',\n        tecotecoContribution: \"최적화 마법사, 효율성의 달인 ⚡\",\n        joinDate: \"2025-01-20\"\n    },\n    {\n        name: \"who's next?\",\n        githubId: \"your-next-profile\",\n        imageUrl: process.env.PUBLIC_URL + '/images/face/another.png',\n        tecotecoContribution: \"당신의 합류를 기다려요 👋\",\n        joinDate: undefined\n    }\n];\n\nexport const MEMBER_DETAILS = {\n    'renechoi': {\n        memorableProblem: '백준 11053 - 가장 긴 증가하는 부분 수열',\n        whatIGained: 'DP의 최적화 방법과 스터디 운영의 노하우를 얻었어요',\n        currentFocus: '고급 DP 문제와 팀 빌딩 스킬',\n        recentActivity: '1일 전 활동',\n        testimonial: '리더십과 알고리즘 실력 모두 뛰어나요!',\n        from: 'kdelay',\n        role: '스터디 리더',\n        streak: 15,\n        solvedProblems: 342\n    },\n    'kdelay': {\n        memorableProblem: '백준 1932 - 정수 삼각형',\n        whatIGained: 'DP의 진정한 의미를 깨달았고, 코드 리뷰 스킬을 키웠어요',\n        currentFocus: '트리 DP와 멘토링 스킬 마스터하기',\n        recentActivity: '2일 전 활동',\n        testimonial: '꼼꼼한 리뷰로 모두의 실력 향상에 기여해요!',\n        from: 'KrongDev',\n        role: '코드 리뷰어',\n        streak: 12,\n        solvedProblems: 298\n    },\n    'KrongDev': {\n        memorableProblem: '프로그래머스 - 네트워크',\n        whatIGained: 'DFS/BFS를 완전히 이해하게 됐고, 문제 해결 패턴을 익혔어요',\n        currentFocus: '최단경로 알고리즘과 문제 분석 능력',\n        recentActivity: '1일 전 활동',\n        testimonial: '어려운 문제도 차근차근 해결하는 능력이 대단해요!',\n        from: 'renechoi',\n        role: '문제 해결사',\n        streak: 8,\n        solvedProblems: 156\n    },\n    '탁형': {\n        memorableProblem: '백준 9019 - DSLR',\n        whatIGained: 'BFS 최적화 방법을 터득했고, 설명하는 능력을 키웠어요',\n        currentFocus: '세그먼트 트리와 설명 스킬 도전',\n        recentActivity: '3일 전 활동',\n        testimonial: '복잡한 개념도 쉽게 설명해주는 천재예요!',\n        from: 'kdelay',\n        role: '설명왕',\n        streak: 6,\n        solvedProblems: 89\n    },\n    '민수': {\n        memorableProblem: '백준 2206 - 벽 부수고 이동하기',\n        whatIGained: 'BFS와 상태 관리의 핵심을 이해했어요',\n        currentFocus: '고급 그래프 알고리즘 탐구',\n        recentActivity: '2일 전 활동',\n        testimonial: '새로운 접근법으로 모두를 놀라게 해요!',\n        from: 'renechoi',\n        role: '트렌드 탐험가',\n        streak: 9,\n        solvedProblems: 124\n    },\n    '지영': {\n        memorableProblem: '프로그래머스 - 카카오톡 채팅방',\n        whatIGained: '문자열 처리와 팀워크의 중요성을 배웠어요',\n        currentFocus: '문자열 알고리즘과 소통 스킬',\n        recentActivity: '1일 전 활동',\n        testimonial: '힘든 순간에도 웃음을 잃지 않는 에너지!',\n        from: '탁형',\n        role: '분위기 메이커',\n        streak: 11,\n        solvedProblems: 187\n    },\n    '현우': {\n        memorableProblem: '백준 1759 - 암호 만들기',\n        whatIGained: '백트래킹과 최적화 기법을 체득했어요',\n        currentFocus: '고급 최적화와 성능 분석',\n        recentActivity: '1일 전 활동',\n        testimonial: '복잡한 문제도 효율적으로 해결하는 마법사!',\n        from: 'kdelay',\n        role: '최적화 마법사',\n        streak: 7,\n        solvedProblems: 98\n    }\n};\n\n\nexport const tecotecoKeywords: string[] = [\n    \"😌 편안한 분위기\", \"💥 사고의 확장\", \"🤗 배려왕 멤버\",\n    \"🥳 즐거운 분위기\", \"📝 꼼꼼한 코드 리뷰\", \"👩‍💻 실전 코딩\",\n    \"🧠 논리적 사고력\", \"🗣️ 커뮤니케이션 역량\", \"🤖 AI 활용\",\n    \"🌱 함께 성장\"\n];\n\n// constants.ts에 추가할 새로운 리뷰들 (기존 tecotecoReviews 배열에 추가)\n\nexport const tecotecoReviews: Review[] = [\n    {\n        name: \"익명1\",\n        attendCount: 3,\n        timeAgo: \"6달 전\",\n        title: \"인생의 의미\",\n        content: \"누가 시킨것도 ..부자가 되는 것도 아닌데 코딩테스트 문제를 풀고 바쁜 일상을 탈탈 털어 진지한 이야기를 나눈 소중한 경험\",\n        emojis: [\"😃\", \"✨\", \"🔥\"],\n        likes: 2,\n    },\n    {\n        name: \"익명2\",\n        attendCount: 10,\n        timeAgo: \"2년 전\",\n        title: \"Better together !\",\n        content: \"혼자서는 엄두도 못 냈던 어려운 알고리즘 문제들! 테코테코 모임에서 함께 고민하고 해결하며 완독하는 뿌듯함을 느꼈습니다. 함께라면 우린 해낼 수 있어요!\",\n        emojis: [\"🧡\", \"😍\", \"😃\"],\n        likes: 1,\n    },\n    {\n        name: \"익명3\",\n        attendCount: 8,\n        timeAgo: \"1년 전\",\n        title: \"많은 것들을 배운 시간이었습니다!\",\n        content: \"운이 좋게 좋은 문제, 열정적인 멤버, 그리고 많은 것을 배울 수 있는 동료들이 있는 모임에 참여하게 돼서 정말 의미 있는 시간이었습니다. 감사합니다 :)\",\n        emojis: [\"☺️\", \"👍\", \"💡\"],\n        likes: 1,\n    },\n    {\n        name: \"익명4\",\n        attendCount: 15,\n        timeAgo: \"3개월 전\",\n        title: \"코드 리뷰의 힘\",\n        content: \"처음엔 부끄러웠던 코드 리뷰가 이제는 가장 기다려지는 시간이 되었어요. 다른 사람의 코드를 보며 새로운 접근법을 배우고, 제 코드도 더 깔끔해졌습니다.\",\n        emojis: [\"🤓\", \"💻\", \"👨‍💻\"],\n        likes: 4,\n    },\n    {\n        name: \"익명5\",\n        attendCount: 6,\n        timeAgo: \"2개월 전\",\n        title: \"알고리즘이 재미있어졌어요\",\n        content: \"혼자 공부할 때는 막막했던 DP 문제들이 팀원들과 함께 차근차근 분석하니 이해가 되기 시작했어요. 이제 새로운 문제를 만나는 것이 두렵지 않습니다!\",\n        emojis: [\"🎯\", \"🧩\", \"💪\"],\n        likes: 3,\n    },\n    {\n        name: \"익명6\",\n        attendCount: 12,\n        timeAgo: \"4개월 전\",\n        title: \"네트워킹의 가치\",\n        content: \"알고리즘 실력뿐만 아니라 개발자로서 성장할 수 있는 인사이트를 많이 얻었어요. 다양한 백그라운드의 사람들과 이야기하며 시야가 넓어졌습니다.\",\n        emojis: [\"🌟\", \"🤝\", \"💬\"],\n        likes: 5,\n    },\n    {\n        name: \"익명7\",\n        attendCount: 4,\n        timeAgo: \"1개월 전\",\n        title: \"따뜻한 커뮤니티\",\n        content: \"실력에 상관없이 서로를 격려하고 도와주는 분위기가 정말 좋아요. 모르는 걸 부끄러워하지 않고 질문할 수 있는 환경이 만들어져서 빠르게 성장할 수 있었습니다.\",\n        emojis: [\"❤️\", \"🤗\", \"🌈\"],\n        likes: 6,\n    },\n    {\n        name: \"익명8\",\n        attendCount: 9,\n        timeAgo: \"5개월 전\",\n        title: \"실전 감각 Up!\",\n        content: \"매주 정해진 시간에 문제를 풀다 보니 실제 코딩테스트에서도 시간 관리가 훨씬 잘되더라고요. 실전 감각을 기를 수 있어서 정말 도움이 되었습니다.\",\n        emojis: [\"⏰\", \"🎯\", \"🚀\"],\n        likes: 2,\n    },\n    {\n        name: \"익명9\",\n        attendCount: 7,\n        timeAgo: \"2주 전\",\n        title: \"꾸준함의 힘\",\n        content: \"매주 금요일이 기다려져요! 바쁜 일상 속에서도 꾸준히 알고리즘을 접할 수 있게 해주는 모임입니다. 작은 습관이 큰 변화를 만든다는 걸 실감하고 있어요.\",\n        emojis: [\"📅\", \"💎\", \"🌱\"],\n        likes: 3,\n    },\n    {\n        name: \"익명10\",\n        attendCount: 11,\n        timeAgo: \"3주 전\",\n        title: \"다양한 관점\",\n        content: \"같은 문제라도 사람마다 다른 접근 방식을 보는 게 정말 흥미로워요. 제가 생각하지 못했던 창의적인 해결책들을 많이 배울 수 있어서 매번 새로운 자극을 받습니다.\",\n        emojis: [\"🎨\", \"💡\", \"🔍\"],\n        likes: 4,\n    },\n    {\n        name: \"익명11\",\n        attendCount: 13,\n        timeAgo: \"6주 전\",\n        title: \"성취감이 달라요\",\n        content: \"혼자 풀 때와는 완전히 다른 성취감을 느껴요. 팀원들과 함께 어려운 문제를 해결했을 때의 그 기쁨은 말로 표현할 수 없습니다. 진짜 팀워크의 힘을 느꼈어요!\",\n        emojis: [\"🏆\", \"🎉\", \"💫\"],\n        likes: 7,\n    },\n    {\n        name: \"익명12\",\n        attendCount: 5,\n        timeAgo: \"1주 전\",\n        title: \"부담 없는 학습\",\n        content: \"경쟁보다는 함께 성장하는 분위기라서 부담 없이 참여할 수 있어요. 모르는 것도 자연스럽게 물어볼 수 있고, 서로 도우며 배우는 문화가 잘 정착되어 있습니다.\",\n        emojis: [\"😌\", \"🤲\", \"📚\"],\n        likes: 2,\n    }\n];\n\nexport const tecotecoFaqs: FAQItem[] = [\n    {\n        id: 1,\n        question: '테코테코는 어떤 스터디인가요?',\n        answer: '테코테코는 코딩 테스트 완전 정복을 목표로 하는 알고리즘 스터디입니다. 단순히 문제를 푸는 것을 넘어, 논리적 사고력과 커뮤니케이션 역량 강화를 지향합니다.'\n    },\n    {\n        id: 2,\n        question: '모임은 언제, 어디서 진행되나요?',\n        answer: '매주 금요일 저녁 7:30 ~ 9:30에 강남역 인근 스터디룸에서 오프라인 모임을 중심으로 진행됩니다. 상황에 따라 온라인(Discord)으로 전환될 수 있습니다.'\n    },\n    {\n        id: 3,\n        question: '스터디 비용은 어떻게 되나요?',\n        answer: '스터디룸 대관료는 참석자끼리 N/1로 정산합니다. 별도의 회비나 멤버십 비용은 없습니다.'\n    },\n    {\n        id: 4,\n        question: '참여하려면 어떻게 해야 하나요?',\n        answer: '현재는 공식 모집은 진행하고 있지 않아요. 관심 있으신 분들은 @renechoi에게 커피챗을 요청해주시면 참여 방법을 안내해 드립니다.'\n    },\n    {\n        id: 5,\n        question: '코딩 테스트 실력이 부족해도 참여할 수 있나요?',\n        answer: '네, 실력에 관계없이 누구나 참여할 수 있습니다. 함께의 가치를 중요하게 생각하며, 서로 돕고 배우며 성장할 수 있는 환경을 지향합니다.'\n    }\n];\n\nexport const tecotecoSteps: StepContent[] = [\n    {\n        label: \"문제를 만나고\",\n        title: \"새로운 도전, 익숙한 문제\",\n        description: \"혼자서는 엄두 내지 못했던 문제들. TecoTeco에서는 그 문제들을 피하지 않고, 함께 마주하며 새로운 도전을 시작합니다. 작은 성공들이 쌓여 큰 자신감으로 이어질 거예요.\",\n        image: process.env.PUBLIC_URL + '/images/step_problem.png',\n    },\n    {\n        label: \"질문하고\",\n        title: \"멈추지 않는 호기심, 날카로운 질문\",\n        description: \"막히는 지점 앞에서 주저하지 마세요. '이건 왜 이렇게 될까?', '더 좋은 방법은 없을까?' 끊임없이 질문하고 서로에게 배우며 이해의 폭을 넓힙니다. 질문하는 용기가 성장의 첫걸음입니다.\",\n        image: process.env.PUBLIC_URL + '/images/step_question.png',\n    },\n    {\n        label: \"파고들고\",\n        title: \"본질을 꿰뚫는 깊이 있는 탐구\",\n        description: \"단순히 정답을 아는 것을 넘어, 문제의 본질과 숨겨진 원리를 집요하게 파고듭니다. 함께 토론하며 '아하!' 하고 깨닫는 순간, 지적 성장의 짜릿함을 경험할 수 있습니다.\",\n        image: process.env.PUBLIC_URL + '/images/step_explore.png',\n    },\n    {\n        label: \"리뷰하고\",\n        title: \"성장을 위한 따뜻한 피드백\",\n        description: \"서로의 코드를 읽고, 배우고, 더 나은 코드를 위해 아낌없이 피드백합니다. 나를 돌아보고 동료의 시야를 빌려 나의 코드를 한층 더 성장시키는 소중한 시간입니다.\",\n        image: process.env.PUBLIC_URL + '/images/step_review.png',\n    },\n    {\n        label: \"성장해요\",\n        title: \"코드를 넘어, 삶의 이야기\",\n        description: \"알고리즘을 넘어 개발 문화, 커리어 고민, 소소한 일상까지. 코드를 매개로 연결된 소중한 인연들이 함께 성장해요.\",\n        image: process.env.PUBLIC_URL + '/images/step_talk.png',\n    },\n];\n\n\n\nexport const HOW_WE_ROLL_DATA = {\n    scheduleIntro: \"금요일 저녁의 2시간은 몰입하기 딱 좋은 시간인 것 같아요.\",\n\n    meetingOverview: [\n        {\n            icon: \"🏢\",\n            title: \"정기 모임\",\n            highlight: \"매주 금요일 저녁 7:30 ~ 9:30\",\n            description: \"강남역 인근 스터디룸에서 만나 오프라인 중심으로 진행해요\",\n            subNote: \"상황에 따라 온라인(Discord)으로도 진행합니다\",\n            type: \"main-meeting\"\n        },\n        {\n            icon: \"📚\",\n            title: \"함께 공부하는 교재\",\n            highlight: \"코딩 테스트 합격자 되기: 자바 편\",\n            description: \"온라인 저지는 백준, 프로그래머스를 활용하고 있어요\",\n            subNote: \"\",\n            type: \"study-material\",\n            link: \"https://product.kyobobook.co.kr/detail/S000212576322\"\n        },\n        {\n            icon: \"💰\",\n            title: \"참여 비용\",\n            highlight: \"스터디룸 대관료 1/N 정산\",\n            description: \"\",\n            subNote: \"\",\n            type: \"cost-info\"\n        }\n    ],\n\n    schedule: [\n        {\n            time: \"19:30 ~ 20:20\",\n            activity: \"이론/코드 리뷰\",\n            detail: \"선정된 리뷰어의 깊이 있는 주제/문제 발표\",\n            value: \"서로의 통찰을 나누고 새로운 관점을 발견하는 시간\",\n            type: \"primary\"\n        },\n        {\n            time: \"20:20 ~ 20:30\",\n            activity: \"잠깐의 휴식 & 자유로운 네트워킹\",\n            detail: \"커피 한 잔과 함께하는 소소한 대화\",\n            value: \"알고리즘을 넘어 진짜 이야기를 나누며 관계를 쌓아가는 시간\",\n            type: \"secondary\"\n        },\n        {\n            time: \"20:30 ~ 21:30\",\n            activity: \"함께 문제 풀이\",\n            detail: \"실시간으로 머리를 맞대고 해결하는 문제들\",\n            value: \"혼자라면 포기했을 문제도 함께라면 해낼 수 있다는 경험\",\n            type: \"primary\"\n        }\n    ],\n\n    closingMessage: \"단순한 스터디가 아닌, 서로의 성장을 응원하는 따뜻한 커뮤니티입니다. 매주 이 시간이 기다려지는 이유, 함께라면 분명 느끼실 수 있을 거예요.\"\n};\n\n\n\nexport const JOURNEY_DATA = {\n    startDate: '2024-09-01',\n    subtitle: \"작은 시작이 모여 의미 있는 변화를 만들어가고 있어요. 각자의 속도로, 함께의 힘으로.\",\n\n    seasons: [\n        {\n            title: \"시즌 1 (2024.09 ~ 2024.12)\",\n            description: \"자료구조의 기본기를 다지고, 알고리즘 문제 해결의 첫 발을 내디뎠습니다.\",\n            icon: \"🌱\",\n            achievements: [\"기본 자료구조 마스터\", \"문제 해결 패턴 습득\", \"팀워크 기반 다지기\"]\n        },\n        {\n            title: \"시즌 1.5 (2025.01 ~ 2025.03)\",\n            description: \"기존 학습 내용을 복습하며 문제 풀이 역량을 강화하고, 실전에 대비했습니다.\",\n            icon: \"🔄\",\n            achievements: [\"핵심 개념 복습 완료\", \"실전 문제 풀이 능력 향상\", \"코드 리뷰 문화 정착\"]\n        },\n        {\n            title: \"시즌 2 (2025.04 ~ 진행중)\",\n            description: \"심화 알고리즘 주제를 탐구하며, 더 복잡한 문제에 대한 해결 능력을 키워나가고 있습니다.\",\n            icon: \"🚀\",\n            achievements: [\"고급 알고리즘 도전\", \"문제 해결 깊이 확장\", \"지속적 성장 중\"]\n        }\n    ],\n\n    currentStats: {\n        totalProblems: \"300+\",\n        studyHours: \"180+\",\n        memberGrowth: \"개인별 평균 50% 향상\",\n        teamSpirit: \"함께하는 즐거움 100%\"\n    },\n\n    imagePath: '/images/tecoteco/tecoteco2025-3q4q.png',\n    imageAlt: \"2025년 3분기 4분기 스케줄\"\n};","// src/pages/TecoTecoPage/sections/ExperienceSection.tsx\nimport React, { useState } from 'react';\nimport { tecotecoSteps } from '../utils/constants';\nimport './ExperienceSection.css';\n\nexport const ExperienceSection: React.FC = () => {\n    const [activeStepIndex, setActiveStepIndex] = useState<number | null>(0);\n\n    const handleStepClick = (index: number) => {\n        setActiveStepIndex(index === activeStepIndex ? null : index);\n    };\n\n    // SVG 일러스트레이션 컴포넌트들\n    const StepIllustrations = {\n        0: ( // 문제를 만나고\n            <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\" className=\"step-illustration\">\n                <defs>\n                    <linearGradient id=\"gradient1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                        <stop offset=\"0%\" style={{stopColor: '#FFB5BA', stopOpacity: 1}} />\n                        <stop offset=\"100%\" style={{stopColor: '#B5E7FF', stopOpacity: 1}} />\n                    </linearGradient>\n                    <linearGradient id=\"gradient2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                        <stop offset=\"0%\" style={{stopColor: '#C3E88D', stopOpacity: 1}} />\n                        <stop offset=\"100%\" style={{stopColor: '#82AAFF', stopOpacity: 1}} />\n                    </linearGradient>\n                </defs>\n\n                {/* 배경 원형 */}\n                <circle cx=\"100\" cy=\"100\" r=\"80\" fill=\"url(#gradient1)\" opacity=\"0.3\"/>\n\n                {/* 중앙 인물 */}\n                <ellipse cx=\"100\" cy=\"140\" rx=\"15\" ry=\"8\" fill=\"#2a2a2a\" opacity=\"0.3\"/> {/* 그림자 */}\n                <rect x=\"85\" y=\"90\" width=\"30\" height=\"50\" rx=\"15\" fill=\"url(#gradient2)\"/> {/* 몸체 */}\n                <circle cx=\"100\" cy=\"75\" r=\"20\" fill=\"#FFE4B5\"/> {/* 머리 */}\n\n                {/* 문제 블록들 */}\n                <rect x=\"50\" y=\"50\" width=\"25\" height=\"25\" rx=\"5\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n                <rect x=\"125\" y=\"45\" width=\"25\" height=\"25\" rx=\"5\" fill=\"#4ECDC4\" opacity=\"0.8\"/>\n                <rect x=\"60\" y=\"120\" width=\"25\" height=\"25\" rx=\"5\" fill=\"#45B7D1\" opacity=\"0.8\"/>\n                <rect x=\"130\" y=\"130\" width=\"25\" height=\"25\" rx=\"5\" fill=\"#96CEB4\" opacity=\"0.8\"/>\n\n                {/* 움직임 라인 */}\n                <path d=\"M 70 80 Q 85 70 100 75\" stroke=\"#C3E88D\" strokeWidth=\"3\" fill=\"none\" opacity=\"0.7\"/>\n                <path d=\"M 130 80 Q 115 70 100 75\" stroke=\"#C3E88D\" strokeWidth=\"3\" fill=\"none\" opacity=\"0.7\"/>\n            </svg>\n        ),\n        1: ( // 질문하고\n            <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\" className=\"step-illustration\">\n                <defs>\n                    <linearGradient id=\"gradient3\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                        <stop offset=\"0%\" style={{stopColor: '#DDA0DD', stopOpacity: 1}} />\n                        <stop offset=\"100%\" style={{stopColor: '#98FB98', stopOpacity: 1}} />\n                    </linearGradient>\n                </defs>\n\n                {/* 배경 */}\n                <circle cx=\"100\" cy=\"100\" r=\"75\" fill=\"url(#gradient3)\" opacity=\"0.2\"/>\n\n                {/* 말풍선들 */}\n                <ellipse cx=\"70\" cy=\"60\" rx=\"25\" ry=\"15\" fill=\"#FFE4E1\" opacity=\"0.9\"/>\n                <path d=\"M 60 70 L 55 80 L 70 75 Z\" fill=\"#FFE4E1\" opacity=\"0.9\"/>\n\n                <ellipse cx=\"130\" cy=\"80\" rx=\"30\" ry=\"18\" fill=\"#E0F6FF\" opacity=\"0.9\"/>\n                <path d=\"M 140 95 L 145 105 L 125 100 Z\" fill=\"#E0F6FF\" opacity=\"0.9\"/>\n\n                {/* 중앙 인물 */}\n                <ellipse cx=\"100\" cy=\"150\" rx=\"12\" ry=\"6\" fill=\"#2a2a2a\" opacity=\"0.3\"/>\n                <rect x=\"88\" y=\"110\" width=\"24\" height=\"40\" rx=\"12\" fill=\"#82AAFF\"/>\n                <circle cx=\"100\" cy=\"95\" r=\"15\" fill=\"#FFDAB9\"/>\n\n                {/* 질문표들 */}\n                <text x=\"70\" y=\"68\" textAnchor=\"middle\" fill=\"#666\" fontSize=\"14\" fontWeight=\"bold\">?</text>\n                <text x=\"130\" y=\"88\" textAnchor=\"middle\" fill=\"#666\" fontSize=\"16\" fontWeight=\"bold\">?</text>\n\n                {/* 에너지 라인 */}\n                <path d=\"M 85 100 Q 70 85 70 60\" stroke=\"#C3E88D\" strokeWidth=\"2\" fill=\"none\" strokeDasharray=\"4,4\"/>\n                <path d=\"M 115 100 Q 130 90 130 80\" stroke=\"#C3E88D\" strokeWidth=\"2\" fill=\"none\" strokeDasharray=\"4,4\"/>\n            </svg>\n        ),\n        2: ( // 파고들고\n            <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\" className=\"step-illustration\">\n                <defs>\n                    <linearGradient id=\"gradient4\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                        <stop offset=\"0%\" style={{stopColor: '#FFB6C1', stopOpacity: 1}} />\n                        <stop offset=\"100%\" style={{stopColor: '#87CEEB', stopOpacity: 1}} />\n                    </linearGradient>\n                </defs>\n\n                {/* 배경 레이어 */}\n                <circle cx=\"100\" cy=\"100\" r=\"70\" fill=\"url(#gradient4)\" opacity=\"0.2\"/>\n\n                {/* 깊이감을 주는 원들 */}\n                <circle cx=\"100\" cy=\"100\" r=\"50\" fill=\"#E6E6FA\" opacity=\"0.4\"/>\n                <circle cx=\"100\" cy=\"100\" r=\"30\" fill=\"#F0F8FF\" opacity=\"0.6\"/>\n                <circle cx=\"100\" cy=\"100\" r=\"15\" fill=\"#FFF\" opacity=\"0.8\"/>\n\n                {/* 중앙 인물 (집중하는 모습) */}\n                <ellipse cx=\"100\" cy=\"145\" rx=\"10\" ry=\"5\" fill=\"#2a2a2a\" opacity=\"0.3\"/>\n                <rect x=\"90\" y=\"105\" width=\"20\" height=\"35\" rx=\"10\" fill=\"#96CEB4\"/>\n                <circle cx=\"100\" cy=\"95\" r=\"12\" fill=\"#FFDAB9\"/>\n\n                {/* 탐구하는 도구들 */}\n                <circle cx=\"80\" cy=\"80\" r=\"8\" fill=\"#FFD700\" opacity=\"0.8\"/>\n                <circle cx=\"120\" cy=\"75\" r=\"6\" fill=\"#FF69B4\" opacity=\"0.8\"/>\n                <rect x=\"70\" y=\"110\" width=\"12\" height=\"3\" rx=\"1\" fill=\"#4169E1\" opacity=\"0.7\"/>\n                <rect x=\"118\" y=\"115\" width=\"12\" height=\"3\" rx=\"1\" fill=\"#4169E1\" opacity=\"0.7\"/>\n\n                {/* 나선형 탐구 경로 */}\n                <path d=\"M 100 100 Q 120 90 130 100 Q 125 120 100 125 Q 75 120 70 100 Q 75 80 100 85\"\n                      stroke=\"#C3E88D\" strokeWidth=\"2\" fill=\"none\" strokeDasharray=\"3,3\"/>\n            </svg>\n        ),\n        3: ( // 리뷰하고\n            <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\" className=\"step-illustration\">\n                <defs>\n                    <linearGradient id=\"gradient5\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                        <stop offset=\"0%\" style={{stopColor: '#E6E6FA', stopOpacity: 1}} />\n                        <stop offset=\"100%\" style={{stopColor: '#F0FFFF', stopOpacity: 1}} />\n                    </linearGradient>\n                </defs>\n\n                {/* 배경 */}\n                <ellipse cx=\"100\" cy=\"100\" rx=\"80\" ry=\"60\" fill=\"url(#gradient5)\" opacity=\"0.3\"/>\n\n                {/* 두 명의 인물 */}\n                <ellipse cx=\"75\" cy=\"140\" rx=\"8\" ry=\"4\" fill=\"#2a2a2a\" opacity=\"0.3\"/>\n                <ellipse cx=\"125\" cy=\"140\" rx=\"8\" ry=\"4\" fill=\"#2a2a2a\" opacity=\"0.3\"/>\n\n                <rect x=\"68\" y=\"110\" width=\"14\" height=\"25\" rx=\"7\" fill=\"#82AAFF\"/>\n                <circle cx=\"75\" cy=\"100\" r=\"10\" fill=\"#FFDAB9\"/>\n\n                <rect x=\"118\" y=\"110\" width=\"14\" height=\"25\" rx=\"7\" fill=\"#C3E88D\"/>\n                <circle cx=\"125\" cy=\"100\" r=\"10\" fill=\"#FFDAB9\"/>\n\n                {/* 코드 리뷰 화면 */}\n                <rect x=\"85\" y=\"60\" width=\"30\" height=\"20\" rx=\"3\" fill=\"#2F3349\" stroke=\"#C3E88D\" strokeWidth=\"1\"/>\n                <rect x=\"87\" y=\"64\" width=\"26\" height=\"2\" rx=\"1\" fill=\"#C3E88D\" opacity=\"0.6\"/>\n                <rect x=\"87\" y=\"68\" width=\"20\" height=\"2\" rx=\"1\" fill=\"#82AAFF\" opacity=\"0.6\"/>\n                <rect x=\"87\" y=\"72\" width=\"24\" height=\"2\" rx=\"1\" fill=\"#C3E88D\" opacity=\"0.6\"/>\n\n                {/* 피드백 화살표 */}\n                <path d=\"M 82 85 Q 88 75 95 65\" stroke=\"#FF6B6B\" strokeWidth=\"2\" fill=\"none\" markerEnd=\"url(#arrowhead)\"/>\n                <path d=\"M 118 85 Q 112 75 105 65\" stroke=\"#4ECDC4\" strokeWidth=\"2\" fill=\"none\" markerEnd=\"url(#arrowhead)\"/>\n\n                {/* 화살표 마커 */}\n                <defs>\n                    <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\" refX=\"9\" refY=\"3.5\" orient=\"auto\">\n                        <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#C3E88D\"/>\n                    </marker>\n                </defs>\n            </svg>\n        ),\n        4: ( // 성장해요\n            <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\" className=\"step-illustration\">\n                <defs>\n                    <linearGradient id=\"gradient6\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                        <stop offset=\"0%\" style={{stopColor: '#FFE4E1', stopOpacity: 1}} />\n                        <stop offset=\"100%\" style={{stopColor: '#E0FFE0', stopOpacity: 1}} />\n                    </linearGradient>\n                    <linearGradient id=\"leafGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                        <stop offset=\"0%\" style={{stopColor: '#C3E88D', stopOpacity: 1}} />\n                        <stop offset=\"100%\" style={{stopColor: '#4ECDC4', stopOpacity: 1}} />\n                    </linearGradient>\n                </defs>\n\n                {/* 배경 성장 원 */}\n                <circle cx=\"100\" cy=\"100\" r=\"75\" fill=\"url(#gradient6)\" opacity=\"0.3\"/>\n\n                {/* 성장하는 나무/식물 */}\n                <rect x=\"98\" y=\"120\" width=\"4\" height=\"40\" fill=\"#8B4513\"/> {/* 줄기 */}\n\n                {/* 잎사귀들 */}\n                <ellipse cx=\"85\" cy=\"110\" rx=\"8\" ry=\"12\" fill=\"url(#leafGradient)\" transform=\"rotate(-20 85 110)\"/>\n                <ellipse cx=\"115\" cy=\"105\" rx=\"10\" ry=\"15\" fill=\"url(#leafGradient)\" transform=\"rotate(25 115 105)\"/>\n                <ellipse cx=\"90\" cy=\"85\" rx=\"12\" ry=\"18\" fill=\"url(#leafGradient)\" transform=\"rotate(-10 90 85)\"/>\n                <ellipse cx=\"110\" cy=\"80\" rx=\"14\" ry=\"20\" fill=\"url(#leafGradient)\" transform=\"rotate(15 110 80)\"/>\n\n                {/* 중앙 꽃/과실 */}\n                <circle cx=\"100\" cy=\"75\" r=\"8\" fill=\"#FFD700\"/>\n                <circle cx=\"100\" cy=\"75\" r=\"4\" fill=\"#FFA500\"/>\n\n                {/* 주변 작은 새싹들 */}\n                <ellipse cx=\"70\" cy=\"130\" rx=\"3\" ry=\"6\" fill=\"#90EE90\"/>\n                <ellipse cx=\"130\" cy=\"135\" rx=\"3\" ry=\"6\" fill=\"#90EE90\"/>\n                <ellipse cx=\"60\" cy=\"145\" rx=\"2\" ry=\"4\" fill=\"#90EE90\"/>\n                <ellipse cx=\"140\" cy=\"150\" rx=\"2\" ry=\"4\" fill=\"#90EE90\"/>\n\n                {/* 성장 에너지 파티클 */}\n                <circle cx=\"80\" cy=\"60\" r=\"2\" fill=\"#C3E88D\" opacity=\"0.7\"/>\n                <circle cx=\"120\" cy=\"55\" r=\"1.5\" fill=\"#82AAFF\" opacity=\"0.7\"/>\n                <circle cx=\"75\" cy=\"45\" r=\"1\" fill=\"#FFD700\" opacity=\"0.7\"/>\n                <circle cx=\"125\" cy=\"40\" r=\"1\" fill=\"#FF69B4\" opacity=\"0.7\"/>\n\n                {/* 그림자 */}\n                <ellipse cx=\"100\" cy=\"160\" rx=\"15\" ry=\"3\" fill=\"#2a2a2a\" opacity=\"0.2\"/>\n            </svg>\n        )\n    };\n\n    return (\n        <section className=\"tecoteco-experience-section\">\n            <div className=\"section-tag-header\">성장을 위한 스텝</div>\n\n            <h2 className=\"section-title\">테코테코 모임을 한다는 건</h2>\n            <p className=\"section-subtitle\">\n                매주 금요일 저녁, <span className=\"highlight\">이런 루틴</span>으로 함께 성장해요.\n            </p>\n\n            <div className=\"tecoteco-steps-nav\">\n                {tecotecoSteps.map((step, index) => (\n                    <div\n                        key={index}\n                        className={`step-item ${activeStepIndex === index ? 'active' : ''}`}\n                        onClick={() => handleStepClick(index)}\n                    >\n                        <div className=\"step-button\">\n                            {index + 1}\n                        </div>\n                        <p className=\"step-label\">{step.label}</p>\n                    </div>\n                ))}\n            </div>\n\n            {activeStepIndex !== null && (\n                <div className=\"step-detail-container\">\n                    <div className=\"step-detail-content\">\n                        <div className=\"step-detail-image-wrapper\">\n                            {StepIllustrations[activeStepIndex as keyof typeof StepIllustrations]}\n                        </div>\n                        <h3 className=\"step-detail-title\">{tecotecoSteps[activeStepIndex].title}</h3>\n                        <p className=\"step-detail-text\">\n                            {tecotecoSteps[activeStepIndex].description}\n                        </p>\n                    </div>\n                </div>\n            )}\n        </section>\n    );\n};","// src/pages/TecoTecoPage/sections/HowWeRollSection.tsx\nimport React from 'react';\nimport { HOW_WE_ROLL_DATA } from '../utils/constants';\nimport './HowWeRollSection.css';\n\nexport const HowWeRollSection: React.FC = () => {\n    return (\n        <section className=\"tecoteco-how-we-roll-section\">\n            <div className=\"section-tag-header\">모임 상세 안내</div>\n\n            <h2 className=\"section-title\">특별한 건 없어요. <br/>  <span className=\"highlight\">그냥 계속</span> 모일 뿐이에요.</h2>\n\n            <div className=\"meeting-overview\">\n                {HOW_WE_ROLL_DATA.meetingOverview.map((item, index) => (\n                    <div key={index} className={`overview-card ${item.type}`}>\n                        <div className=\"card-icon\">{item.icon}</div>\n                        <div className=\"card-content\">\n                            <h3>{item.title}</h3>\n                            {item.link ? (\n                                <p>\n                                    <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <span className=\"highlight\">{item.highlight}</span>\n                                    </a>\n                                </p>\n                            ) : (\n                                <p><span className=\"highlight\">{item.highlight}</span></p>\n                            )}\n                            {item.description && (\n                                <p>\n                                    {item.description.split(' ').map((word, i) =>\n                                        word === '오프라인' || word === '중심으로' ? (\n                                            <span key={i} className=\"color-primary-text\">{word} </span>\n                                        ) : word === '백준,' || word === '프로그래머스를' ? (\n                                            <span key={i} className=\"color-secondary-text\">{word} </span>\n                                        ) : (\n                                            word + ' '\n                                        )\n                                    )}\n                                </p>\n                            )}\n                            {item.subNote && (\n                                <p className=\"sub-note\">{item.subNote}</p>\n                            )}\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            <h3 className=\"intro-sub-heading\">몰입, 해본 적 있으세요?</h3>\n            <p className=\"schedule-intro\">\n                {HOW_WE_ROLL_DATA.scheduleIntro}\n            </p>\n\n            <div className=\"activity-table\">\n                <table>\n                    <thead>\n                    <tr>\n                        <th>시간</th>\n                        <th>무엇을</th>\n                        {/*<th>어떻게</th>*/}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {HOW_WE_ROLL_DATA.schedule.map((item, index) => (\n                        <tr key={index}>\n                            <td><strong>{item.time}</strong></td>\n                            <td>\n                                    <span className={item.type === 'primary' ? 'color-primary-text' : 'color-secondary-text'}>\n                                        <strong>{item.activity}</strong>\n                                    </span>\n                                <br/>\n                                <span className=\"activity-detail\">{item.detail}</span>\n                            </td>\n                            {/*<td>*/}\n                            {/*    {item.value.split(' ').map((word, i) => {*/}\n                            {/*        const highlightWords = ['통찰을', '나누고', '진짜', '이야기', '함께라면', '해낼', '수', '있다'];*/}\n                            {/*        return highlightWords.some(hw => word.includes(hw)) ? (*/}\n                            {/*            <span key={i} className=\"highlight\">{word} </span>*/}\n                            {/*        ) : (*/}\n                            {/*            word + ' '*/}\n                            {/*        );*/}\n                            {/*    })}*/}\n                            {/*</td>*/}\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n\n            {/*<div className=\"closing-message\">*/}\n            {/*    <p>*/}\n            {/*        {HOW_WE_ROLL_DATA.closingMessage.split(' ').map((word, i) => {*/}\n            {/*            const highlightPhrase = '서로의 성장을 응원하는 따뜻한 커뮤니티';*/}\n            {/*            if (word === '단순한' && HOW_WE_ROLL_DATA.closingMessage.includes(highlightPhrase)) {*/}\n            {/*                const parts = HOW_WE_ROLL_DATA.closingMessage.split(highlightPhrase);*/}\n            {/*                return (*/}\n            {/*                    <span key={i}>*/}\n            {/*                        {parts[0]}*/}\n            {/*                        <span className=\"highlight\">{highlightPhrase}</span>*/}\n            {/*                        {parts[1]}*/}\n            {/*                    </span>*/}\n            {/*                );*/}\n            {/*            }*/}\n            {/*            return null;*/}\n            {/*        }).filter(Boolean)[0] || HOW_WE_ROLL_DATA.closingMessage}*/}\n            {/*    </p>*/}\n            {/*</div>*/}\n        </section>\n    );\n};","// src/pages/TecoTecoPage/sections/JourneySection.tsx\nimport React from 'react';\nimport { JOURNEY_DATA } from '../utils/constants';\nimport './JourneySection.css';\n\nexport const JourneySection: React.FC = () => {\n    const calculateDays = () => {\n        const startDate = new Date(JOURNEY_DATA.startDate);\n        const today = new Date('2025-06-14'); // Current date is June 14, 2025\n        const diffTime = Math.abs(today.getTime() - startDate.getTime());\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays;\n    };\n\n    const daysSinceStart = calculateDays();\n\n    return (\n        <section className=\"tecoteco-journey-section\">\n            <div className=\"section-tag-header\">우리의 여정</div>\n\n            <h2 className=\"section-title\">하루하루가 쌓이니 벌써 <span className=\"highlight\">{daysSinceStart}일</span>이 되었어요.</h2>\n\n            <p className=\"section-subtitle\">\n                {JOURNEY_DATA.subtitle}\n            </p>\n\n            {/* 현재 성과 요약 */}\n            {/*<div className=\"journey-stats\">*/}\n            {/*    <div className=\"stat-card\">*/}\n            {/*        <span className=\"stat-number\">{JOURNEY_DATA.currentStats.totalProblems}</span>*/}\n            {/*        <span className=\"stat-label\">해결한 문제</span>*/}\n            {/*    </div>*/}\n            {/*    <div className=\"stat-card\">*/}\n            {/*        <span className=\"stat-number\">{JOURNEY_DATA.currentStats.studyHours}</span>*/}\n            {/*        <span className=\"stat-label\">함께한 시간</span>*/}\n            {/*    </div>*/}\n            {/*    <div className=\"stat-card\">*/}\n            {/*        <span className=\"stat-number\">50%</span>*/}\n            {/*        <span className=\"stat-label\">평균 실력 향상</span>*/}\n            {/*    </div>*/}\n            {/*    <div className=\"stat-card\">*/}\n            {/*        <span className=\"stat-number\">100%</span>*/}\n            {/*        <span className=\"stat-label\">함께하는 즐거움</span>*/}\n            {/*    </div>*/}\n            {/*</div>*/}\n\n            {/* 시즌별 여정 */}\n            <ul className=\"journey-list\">\n                {JOURNEY_DATA.seasons.map((season, index) => (\n                    <li key={index} className=\"journey-item\">\n                        <div className=\"season-header\">\n                            <span className=\"season-icon\">{season.icon}</span>\n                            <strong>{season.title}</strong>\n                        </div>\n                        <span className=\"journey-description\">{season.description}</span>\n                        <div className=\"achievements\">\n                            {season.achievements.map((achievement, i) => (\n                                <span key={i} className=\"achievement-badge\">{achievement}</span>\n                            ))}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n\n            {/* 미래 계획 이미지 */}\n            <div className=\"journey-image-wrapper\">\n                <div className=\"image-header\">\n                    <h4>앞으로의 계획</h4>\n                    <p>체계적이고 지속적인 성장을 위한 로드맵</p>\n                </div>\n                <img\n                    src={process.env.PUBLIC_URL + JOURNEY_DATA.imagePath}\n                    alt={JOURNEY_DATA.imageAlt}\n                />\n            </div>\n\n            {/*/!* 마무리 메시지 *!/*/}\n            {/*<div className=\"journey-closing\">*/}\n            {/*    <p>*/}\n            {/*        작은 걸음이지만 꾸준히, 의미 있게.*/}\n            {/*    </p>*/}\n            {/*</div>*/}\n        </section>\n    );\n};","// src/pages/TecoTecoPage/utils/helpers.ts\n\nexport const getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n};\n\nexport const handleImgError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    const bg = getRandomColor();\n    const svg = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\">\n            <circle cx=\"32\" cy=\"32\" r=\"32\" fill=\"${bg}\"/>\n            <text x=\"32\" y=\"42\" font-size=\"32\" text-anchor=\"middle\" fill=\"#fff\" font-family=\"Arial, sans-serif\">?</text>\n        </svg>\n    `;\n    e.currentTarget.src = 'data:image/svg+xml;utf8,' + encodeURIComponent(svg);\n    e.currentTarget.alt = '프로필 이미지 없음';\n};","// src/pages/TecoTecoPage/sections/MembersSection.tsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { tecotecoMembers, MEMBER_DETAILS } from '../utils/constants';\nimport { handleImgError } from '../utils/helpers';\nimport { Contributor } from '../utils/types';\nimport './MembersSection.css';\n\n// 통계 데이터 (실제 데이터로 교체 필요)\nconst TECOTECO_STATS = {\n    totalProblems: 1247,\n    totalHours: 180,\n    participationRate: 85,\n    popularAlgorithms: ['DP', '그래프', '이분탐색', '그리디'],\n    weeklyMvp: 'renechoi', // 이 주의 MVP\n};\n\ninterface MemberDetailModalProps {\n    member: Contributor;\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nconst MemberDetailModal: React.FC<MemberDetailModalProps> = ({ member, isOpen, onClose }) => {\n    const details = MEMBER_DETAILS[member.name as keyof typeof MEMBER_DETAILS];\n\n    // ESC 키로 모달 닫기\n    useEffect(() => {\n        const handleEscKey = (event: KeyboardEvent) => {\n            if (event.key === 'Escape') {\n                onClose();\n            }\n        };\n\n        if (isOpen) {\n            document.addEventListener('keydown', handleEscKey);\n            // 모달이 열릴 때 body 스크롤 방지\n            document.body.style.overflow = 'hidden';\n        }\n\n        return () => {\n            document.removeEventListener('keydown', handleEscKey);\n            document.body.style.overflow = 'unset';\n        };\n    }, [isOpen, onClose]);\n\n    if (!isOpen || !details) return null;\n\n    return (\n        <div className=\"member-modal-overlay\" onClick={onClose}>\n            <div className=\"member-modal-content\" onClick={(e) => e.stopPropagation()}>\n                <button className=\"modal-close-btn\" onClick={onClose}>×</button>\n\n                <div className=\"modal-header\">\n                    <img\n                        src={member.imageUrl}\n                        alt={`${member.name} 프로필`}\n                        className=\"modal-profile-img\"\n                        onError={handleImgError}\n                    />\n                    <div className=\"modal-member-info\">\n                        <h3>{member.name}</h3>\n                        <span className=\"modal-role\">{details.role}</span>\n                        <span className=\"modal-recent-activity\">{details.recentActivity}</span>\n                        <span className=\"modal-current-focus\">📚 {details.currentFocus}</span>\n                        <div className=\"modal-stats\">\n                            <span className=\"modal-streak\">🔥 {details.streak}일 연속</span>\n                            <span className=\"modal-solved\">✅ {details.solvedProblems}문제</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"modal-content-sections\">\n                    <div className=\"modal-section\">\n                        <h4>🏆 가장 기억에 남는 문제</h4>\n                        <p className=\"modal-problem\">{details.memorableProblem}</p>\n                    </div>\n\n                    <div className=\"modal-section\">\n                        <h4>💡 테코테코에서 얻은 것</h4>\n                        <p className=\"modal-gained\">{details.whatIGained}</p>\n                    </div>\n\n                    <div className=\"modal-section\">\n                        <h4>💬 동료의 한마디</h4>\n                        <p className=\"modal-testimonial\">\"{details.testimonial}\"</p>\n                        <span className=\"testimonial-author\">- {details.from}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\ninterface ContributorCardProps {\n    contributor: Contributor;\n    onClick: () => void;\n    isMvp: boolean;\n    isHovered: boolean;\n    onHover: (memberId: string | null) => void;\n    hoveredMemberId: string | null;\n}\n\nconst ContributorCard: React.FC<ContributorCardProps> = ({\n                                                             contributor,\n                                                             onClick,\n                                                             isMvp,\n                                                             isHovered,\n                                                             onHover,\n                                                             hoveredMemberId\n                                                         }) => {\n    const getMonthsSinceJoined = (joinDate: string | undefined): string => {\n        if (!joinDate) return \"\";\n        const joined = new Date(joinDate);\n        const today = new Date();\n        const months = (today.getFullYear() - joined.getFullYear()) * 12 + today.getMonth() - joined.getMonth();\n        return `함께한 지 ${months}개월`;\n    };\n\n    const details = MEMBER_DETAILS[contributor.name as keyof typeof MEMBER_DETAILS];\n\n    const handleMouseEnter = () => {\n        onHover(contributor.name);\n    };\n\n    const handleMouseLeave = () => {\n        onHover(null);\n    };\n\n    // 현재 카드가 hover되지 않았고, 다른 카드가 hover된 경우 블러 처리\n    const shouldBlur = hoveredMemberId && hoveredMemberId !== contributor.name;\n\n    return (\n        <div\n            className={`tecoteco-contributor-card ${isMvp ? 'mvp-card' : ''} ${isHovered ? 'hovered' : ''} ${shouldBlur ? 'blurred' : ''}`}\n            onClick={onClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n        >\n            {isMvp && <div className=\"mvp-badge\">👑 이주의 MVP</div>}\n\n            <div className=\"tecoteco-profile-wrapper\">\n                <img\n                    src={contributor.imageUrl}\n                    alt={`${contributor.name} 프로필`}\n                    className=\"tecoteco-profile-img\"\n                    onError={handleImgError}\n                />\n                {details && <div className=\"activity-indicator\"></div>}\n            </div>\n\n            <span className=\"tecoteco-contributor-name\">{contributor.name}</span>\n\n            {contributor.joinDate && (\n                <span className=\"tecoteco-contributor-duration\">{getMonthsSinceJoined(contributor.joinDate)}</span>\n            )}\n\n            {contributor.tecotecoContribution && (\n                <span className=\"tecoteco-contributor-contribution\">{contributor.tecotecoContribution}</span>\n            )}\n\n            {details && (\n                <>\n                    <div className=\"member-stats-preview\">\n                        <span className=\"streak-preview\">🔥 {details.streak}</span>\n                    </div>\n                </>\n            )}\n\n            {/* 호버 팝업을 카드 내부로 이동 */}\n            {isHovered && details && (\n                <div className=\"hover-detail-overlay\">\n                    <div className=\"hover-detail-popup\">\n                        <div className=\"hover-detail-header\">\n                            <span className=\"hover-detail-role\">{details.role}</span>\n                            <span className=\"hover-detail-streak\">🔥 {details.streak}일 연속</span>\n                        </div>\n                        <div className=\"hover-detail-problem\">\n                            <strong>최근 도전한 문제</strong>\n                            {details.memorableProblem.split(' - ')[1] || details.memorableProblem}\n                        </div>\n                        <div className=\"hover-detail-testimonial\">\n                            \"{details.testimonial}\"\n                        </div>\n                        <div className=\"hover-detail-footer\">\n                            클릭해서 더 자세한 이야기 보기 →\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst StatsSection: React.FC = () => {\n    return (\n        <div className=\"stats-container\">\n            <h3 className=\"stats-title\">한땀 한땀 쌓인 작지만 확실한 성취들</h3>\n            <div className=\"stats-grid\">\n                <div className=\"stat-item\">\n                    <span className=\"stat-number\">{TECOTECO_STATS.totalProblems.toLocaleString()}</span>\n                    <span className=\"stat-label\">총 해결한 문제</span>\n                </div>\n                <div className=\"stat-item\">\n                    <span className=\"stat-number\">{TECOTECO_STATS.totalHours}시간+</span>\n                    <span className=\"stat-label\">함께한 시간</span>\n                </div>\n                <div className=\"stat-item\">\n                    <span className=\"stat-number\">{TECOTECO_STATS.participationRate}%</span>\n                    <span className=\"stat-label\">평균 참여율</span>\n                </div>\n                <div className=\"stat-item popular-algorithms\">\n                    <span className=\"stat-label\">인기 알고리즘</span>\n                    <div className=\"algorithm-tags\">\n                        {TECOTECO_STATS.popularAlgorithms.map((algo, index) => (\n                            <span key={index} className=\"algorithm-tag\">{algo}</span>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport const MembersSection: React.FC = () => {\n    const [selectedMember, setSelectedMember] = useState<Contributor | null>(null);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [hoveredMemberId, setHoveredMemberId] = useState<string | null>(null);\n\n    const handleMemberClick = (member: Contributor) => {\n        setSelectedMember(member);\n        setIsModalOpen(true);\n    };\n\n    const closeModal = useCallback(() => {\n        setIsModalOpen(false);\n        setSelectedMember(null);\n    }, []);\n\n    const handleMemberHover = (memberId: string | null) => {\n        setHoveredMemberId(memberId);\n    };\n\n    return (\n        <section className=\"tecoteco-members-section\">\n            <div className=\"section-tag-header\">함께하는 멤버들이에요</div>\n            <h2 className=\"section-title\">더 멋진 여정이 펼쳐질 거예요, <br/> 함께라면.</h2>\n\n            {/* 멤버 카드 섹션 */}\n            <div className=\"scrolling-members-wrapper\">\n                <div className=\"scrolling-members-inner\">\n                    <div className=\"tecoteco-contributors-list\">\n                        {tecotecoMembers.map((member, index) => (\n                            <ContributorCard\n                                key={index}\n                                contributor={member}\n                                onClick={() => handleMemberClick(member)}\n                                isMvp={member.name === TECOTECO_STATS.weeklyMvp}\n                                isHovered={hoveredMemberId === member.name}\n                                onHover={handleMemberHover}\n                                hoveredMemberId={hoveredMemberId}\n                            />\n                        ))}\n                    </div>\n                    <div className=\"tecoteco-contributors-list\" aria-hidden=\"true\">\n                        {tecotecoMembers.map((member, index) => (\n                            <ContributorCard\n                                key={index + tecotecoMembers.length}\n                                contributor={member}\n                                onClick={() => handleMemberClick(member)}\n                                isMvp={member.name === TECOTECO_STATS.weeklyMvp}\n                                isHovered={hoveredMemberId === member.name}\n                                onHover={handleMemberHover}\n                                hoveredMemberId={hoveredMemberId}\n                            />\n                        ))}\n                    </div>\n                </div>\n            </div>\n\n            <p className=\"members-intro\">\n                각자의 성장 스토리가 모여 더 큰 시너지를 만들어가고 있어요.\n                <br/>\n                <span className=\"interactive-hint\">💡 멤버 카드를 클릭해서 더 자세한 이야기를 확인해보세요!</span>\n            </p>\n\n            {/* 연결성 표현 */}\n            <div className=\"connection-lines\">\n                <svg className=\"connections-svg\" viewBox=\"0 0 100 20\">\n                    <path\n                        d=\"M 10 10 Q 30 5 50 10 T 90 10\"\n                        stroke=\"rgba(195, 232, 141, 0.3)\"\n                        strokeWidth=\"1\"\n                        fill=\"none\"\n                        className=\"connection-path\"\n                    />\n                </svg>\n                <span className=\"connection-text\">서로 영감을 주고받으며</span>\n            </div>\n\n            {/* 통계 섹션 */}\n            <StatsSection />\n\n            {/* 멤버 상세 모달 */}\n            {selectedMember && (\n                <MemberDetailModal\n                    member={selectedMember}\n                    isOpen={isModalOpen}\n                    onClose={closeModal}\n                />\n            )}\n        </section>\n    );\n};","// src/pages/TecoTecoPage/sections/ReviewsSection.tsx\nimport React, { useState, useEffect, useRef } from 'react';\nimport { tecotecoKeywords, tecotecoReviews } from '../utils/constants';\nimport { Review } from '../utils/types';\nimport './ReviewsSection.css';\n\nconst ReviewCard: React.FC<{ review: Review }> = ({ review }) => (\n    <div className=\"tecoteco-review-card\">\n        <div className=\"tecoteco-review-header\">\n            <span className=\"tecoteco-reviewer-name\">{review.name}</span>\n            <span className=\"tecoteco-review-meta\">모임에 {review.attendCount}회 참석하고 작성한 후기예요. {review.timeAgo}</span>\n        </div>\n        <h4 className=\"tecoteco-review-title\">{review.title}</h4>\n        <p className=\"tecoteco-review-content\">{review.content}</p>\n        <div className=\"tecoteco-review-footer\">\n            <div className=\"tecoteco-review-emojis\">\n                {review.emojis.map((emoji, idx) => (\n                    <span key={idx}>{emoji}</span>\n                ))}\n            </div>\n            <span className=\"tecoteco-review-likes\">🧡 {review.likes}</span>\n        </div>\n    </div>\n);\n\nexport const ReviewsSection: React.FC = () => {\n    const [visibleReviewsCount, setVisibleReviewsCount] = useState(3); // 초기 3개만 표시\n    const [isLoading, setIsLoading] = useState(false); // 로딩 상태\n    const sectionRef = useRef<HTMLElement>(null);\n\n    const handleViewMore = () => {\n        setIsLoading(true);\n\n        // 자연스러운 로딩 효과를 위한 딜레이\n        setTimeout(() => {\n            const nextCount = Math.min(visibleReviewsCount + 5, tecotecoReviews.length);\n            setVisibleReviewsCount(nextCount);\n            setIsLoading(false);\n        }, 500);\n    };\n\n    // 새로운 리뷰가 로드되면 스크롤을 새로운 리뷰 위치로 부드럽게 이동\n    useEffect(() => {\n        if (visibleReviewsCount > 3 && sectionRef.current) {\n            const newReviewsStartIndex = visibleReviewsCount - 5;\n            const reviewCards = sectionRef.current.querySelectorAll('.tecoteco-review-card');\n            const targetCard = reviewCards[Math.max(newReviewsStartIndex, 3)];\n\n            if (targetCard) {\n                setTimeout(() => {\n                    targetCard.scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'center'\n                    });\n                }, 100);\n            }\n        }\n    }, [visibleReviewsCount]);\n\n    const hasMoreReviews = visibleReviewsCount < tecotecoReviews.length;\n    const remainingReviews = tecotecoReviews.length - visibleReviewsCount;\n\n    return (\n        <section className=\"tecoteco-reviews-section\" ref={sectionRef}>\n            <div className=\"section-tag-header\">솔직한 후기</div>\n            <h2 className=\"section-title\">\n                가장 진솔한 이야기, <br/> TecoTeco 멤버들의 목소리 🗣️\n            </h2>\n            <p className=\"section-subtitle\">\n                숫자와 코드만으로는 설명할 수 없는 <span className=\"highlight\">우리 모임의 진짜 가치</span>를 들어보세요.\n            </p>\n\n            <div className=\"tecoteco-keywords-list\">\n                {tecotecoKeywords.map((keyword, index) => (\n                    <span key={index} className=\"tecoteco-keyword-tag\">\n                        {keyword}\n                    </span>\n                ))}\n            </div>\n\n            <div className={`tecoteco-reviews-grid ${isLoading ? 'loading' : ''}`}>\n                {tecotecoReviews.slice(0, visibleReviewsCount).map((review, index) => (\n                    <ReviewCard\n                        key={index}\n                        review={review}\n                    />\n                ))}\n\n                {/* 로딩 중일 때 스켈레톤 카드들 */}\n                {isLoading && Array.from({ length: Math.min(5, remainingReviews) }).map((_, index) => (\n                    <div key={`skeleton-${index}`} className=\"tecoteco-review-card skeleton-card\">\n                        <div className=\"skeleton-header\">\n                            <div className=\"skeleton-name\"></div>\n                            <div className=\"skeleton-meta\"></div>\n                        </div>\n                        <div className=\"skeleton-title\"></div>\n                        <div className=\"skeleton-content\">\n                            <div className=\"skeleton-line\"></div>\n                            <div className=\"skeleton-line\"></div>\n                            <div className=\"skeleton-line short\"></div>\n                        </div>\n                        <div className=\"skeleton-footer\">\n                            <div className=\"skeleton-emojis\"></div>\n                            <div className=\"skeleton-likes\"></div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {hasMoreReviews && !isLoading && (\n                <div className=\"tecoteco-view-all-reviews-wrapper\">\n                    <button\n                        className=\"tecoteco-view-all-reviews-button\"\n                        onClick={handleViewMore}\n                        disabled={isLoading}\n                    >\n                        <span className=\"button-text\">\n                            후기 더 보기\n                            <span className=\"remaining-count\">\n                                ({remainingReviews}개 남음)\n                            </span>\n                        </span>\n                        <span className=\"button-icon\">📝</span>\n                    </button>\n                </div>\n            )}\n\n            {isLoading && (\n                <div className=\"loading-indicator\">\n                    <div className=\"loading-spinner\"></div>\n                    <span>더 많은 후기를 불러오는 중...</span>\n                </div>\n            )}\n\n            {!hasMoreReviews && visibleReviewsCount > 3 && (\n                <div className=\"all-reviews-loaded\">\n                    <span className=\"completion-message\">\n                        ✨ 모든 후기를 확인했어요!\n                    </span>\n                    <p className=\"thank-you-message\">\n                        소중한 후기를 남겨주신 모든 멤버분들께 감사드려요 💝\n                    </p>\n                </div>\n            )}\n        </section>\n    );\n};","// src/pages/TecoTecoPage/sections/FaqJoinSection.tsx\nimport React, { useState } from 'react';\nimport { tecotecoFaqs } from '../utils/constants'; //\nimport './FaqJoinSection.css'; //\n\nexport const FaqJoinSection: React.FC = () => {\n    const [openFaqId, setOpenFaqId] = useState<number | null>(null);\n\n    const toggleFaq = (id: number) => {\n        setOpenFaqId(prevId => (prevId === id ? null : id));\n    };\n\n    return (\n        <section className=\"tecoteco-faq-join-section\">\n            <div className=\"section-tag-header\">궁금증 해결</div>\n            <h2 className=\"section-title\">\n                FAQ\n            </h2>\n\n\n            <div className=\"tecoteco-faq-items\">\n                {tecotecoFaqs.map(faq => (\n                    <div\n                        key={faq.id}\n                        className={`tecoteco-faq-item ${openFaqId === faq.id ? 'open' : ''}`}\n                    >\n                        <div\n                            className=\"tecoteco-faq-question\"\n                            onClick={() => toggleFaq(faq.id)}\n                            role=\"button\"\n                            aria-expanded={openFaqId === faq.id}\n                        >\n                            <span className=\"tecoteco-faq-icon\">Q.</span>\n                            <span className=\"tecoteco-faq-question-text\">{faq.question}</span>\n                            <span className=\"tecoteco-faq-toggle-icon\">\n                                {openFaqId === faq.id ? '▲' : '▼'}\n                            </span>\n                        </div>\n                        {openFaqId === faq.id && (\n                            <div className=\"tecoteco-faq-answer\">\n                                <span className=\"tecoteco-faq-icon\">A.</span>\n                                <p>{faq.answer}</p>\n                            </div>\n                        )}\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"join-cta-block\">\n                <h3 className=\"join-cta-title\">TecoTeco, 당신의 합류를 기다려요!</h3>\n                <p className=\"join-description\">\n                </p>\n                <button className=\"join-contact-button\" onClick={() => alert('@renechoi에게 커피챗 요청!')}>\n                    @renechoi에게 커피챗 요청하기 ☕\n                </button>\n            </div>\n        </section>\n    );\n};","import React, { useRef } from 'react';\nimport { TemplateHeader } from '../../components/layout';\nimport { Footer } from '../../components/layout';\nimport { HeroSection } from './sections/HeroSection';\nimport { IntroSection } from './sections/IntroSection';\nimport { PhilosophySection } from './sections/PhilosophySection';\nimport { ExperienceSection } from './sections/ExperienceSection';\nimport { HowWeRollSection } from './sections/HowWeRollSection';\nimport { JourneySection } from './sections/JourneySection';\nimport { MembersSection } from './sections/MembersSection';\nimport { ReviewsSection } from './sections/ReviewsSection';\nimport { FaqJoinSection } from './sections/FaqJoinSection';\n\nimport './TecoTecoPage.css';\nimport {WhyTogetherSection} from \"./sections/WhyTogetherSection\";\nimport {TextEncoderStream} from \"node:stream/web\";\n\nconst TecoTecoPage: React.FC = () => {\n    const introSectionRef = useRef<HTMLDivElement>(null);\n\n    // Hero CTA 버튼 클릭 시 동작할 함수: 새로운 도입 섹션으로 스크롤\n    const handleCtaClick = () => {\n        if (introSectionRef.current) {\n            window.scrollTo({\n                top: introSectionRef.current.offsetTop - 80, // 헤더 높이만큼 빼줌\n                behavior: 'smooth'\n            });\n        }\n    };\n\n    return (\n        <div className=\"tecoteco-page\">\n            <TemplateHeader />\n            <main className=\"tecoteco-content\">\n                <HeroSection onCtaClick={handleCtaClick} />\n                <IntroSection ref={introSectionRef} />\n                {/*<WhyTogetherSection />*/}\n                <MembersSection />\n                <HowWeRollSection />\n                <JourneySection />\n                <ExperienceSection />\n\n\n                <ReviewsSection />\n                <FaqJoinSection />\n            </main>\n            <Footer />\n        </div>\n    );\n};\n\nexport default TecoTecoPage;"],"names":["HeroSection","_ref","onCtaClick","_jsxs","className","children","_jsx","src","process","alt","IntroSection","forwardRef","props","ref","tecotecoMembers","name","githubId","imageUrl","tecotecoContribution","joinDate","undefined","MEMBER_DETAILS","memorableProblem","whatIGained","currentFocus","recentActivity","testimonial","from","role","streak","solvedProblems","tecotecoKeywords","tecotecoReviews","attendCount","timeAgo","title","content","emojis","likes","tecotecoFaqs","id","question","answer","tecotecoSteps","label","description","image","HOW_WE_ROLL_DATA","scheduleIntro","meetingOverview","icon","highlight","subNote","type","link","schedule","time","activity","detail","value","closingMessage","JOURNEY_DATA","startDate","subtitle","seasons","achievements","currentStats","totalProblems","studyHours","memberGrowth","teamSpirit","imagePath","imageAlt","ExperienceSection","activeStepIndex","setActiveStepIndex","useState","StepIllustrations","width","height","viewBox","x1","y1","x2","y2","offset","style","stopColor","stopOpacity","cx","cy","r","fill","opacity","rx","ry","x","y","d","stroke","strokeWidth","textAnchor","fontSize","fontWeight","strokeDasharray","markerEnd","markerWidth","markerHeight","refX","refY","orient","points","transform","map","step","index","concat","onClick","handleStepClick","HowWeRollSection","item","href","target","rel","split","word","i","JourneySection","daysSinceStart","calculateDays","Date","today","diffTime","Math","abs","getTime","ceil","season","achievement","handleImgError","e","bg","getRandomColor","color","floor","random","svg","currentTarget","encodeURIComponent","TECOTECO_STATS","totalHours","participationRate","popularAlgorithms","weeklyMvp","MemberDetailModal","member","isOpen","onClose","details","useEffect","handleEscKey","event","key","document","addEventListener","body","overflow","removeEventListener","stopPropagation","onError","ContributorCard","_ref2","contributor","isMvp","isHovered","onHover","hoveredMemberId","shouldBlur","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","joined","months","getFullYear","getMonth","getMonthsSinceJoined","_Fragment","StatsSection","toLocaleString","algo","MembersSection","selectedMember","setSelectedMember","isModalOpen","setIsModalOpen","setHoveredMemberId","handleMemberClick","closeModal","useCallback","handleMemberHover","memberId","length","ReviewCard","review","emoji","idx","ReviewsSection","visibleReviewsCount","setVisibleReviewsCount","isLoading","setIsLoading","sectionRef","useRef","current","newReviewsStartIndex","targetCard","querySelectorAll","max","setTimeout","scrollIntoView","behavior","block","hasMoreReviews","remainingReviews","keyword","slice","Array","min","_","handleViewMore","nextCount","disabled","FaqJoinSection","openFaqId","setOpenFaqId","faq","toggleFaq","prevId","alert","TecoTecoPage","introSectionRef","TemplateHeader","handleCtaClick","window","scrollTo","top","offsetTop","Footer"],"sourceRoot":""}