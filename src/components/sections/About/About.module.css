/* About Section - 카드 스타일 기반 */
.about {
  padding: 160px 0 120px 0;
  overflow: hidden;
}

/* About 전용 섹션 헤더 */
.sectionHeader {
  margin-bottom: 80px;
  text-align: center;
}

/* About Container - 카드 스타일 */
.aboutContainer {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 40px;
}

.aboutSubsection {
  margin-bottom: 20px;
  height: auto !important;
  min-height: 0 !important;
  max-height: none !important;
  flex-shrink: 0;
}

.sectionInner {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 60px;
  align-items: start;
  grid-auto-rows: min-content;
  min-height: 0 !important;
  height: auto !important;
  max-height: none !important;
}

/* Question Block */
.questionBlock {
  text-align: center;
  position: relative;
  transform: translateX(-50px);
  opacity: 0;
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

/* 스크롤 애니메이션 클래스 */
.animateIn {
  /* 애니메이션 트리거 클래스 */
}

.questionBlock.animateIn {
  transform: translateX(0);
  opacity: 1;
}

.questionNumber {
  width: 60px;
  height: 60px;
  background: linear-gradient(135deg, #C3E88D 0%, #A8D66F 100%);
  color: #1A1D29;
  border-radius: 50%;
  font-size: 20px;
  font-weight: 700;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto 24px;
  box-shadow: 0 8px 32px rgba(195, 232, 141, 0.3);
}

.questionTitle {
  font-size: clamp(24px, 4vw, 36px);
  font-weight: 700;
  color: #ffffff;
  margin-bottom: 32px;
  line-height: 1.3;
  font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, sans-serif;
}

.questionVisual {
  position: relative;
  display: inline-block;
}

.visualIcon {
  font-size: 80px;
  position: relative;
  z-index: 2;
  filter: drop-shadow(0 8px 16px rgba(0, 0, 0, 0.1));
}

.visualDecoration {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 120px;
  height: 120px;
  background: linear-gradient(135deg, rgba(195, 232, 141, 0.15), rgba(195, 232, 141, 0.05));
  border-radius: 50%;
  z-index: 1;
  animation: decorationPulse 3s ease-in-out infinite;
}

@keyframes decorationPulse {
  0%, 100% { 
    transform: translate(-50%, -50%) scale(1); 
    opacity: 0.8; 
  }
  50% { 
    transform: translate(-50%, -50%) scale(1.1); 
    opacity: 0.4; 
  }
}

/* Answer Block */
.answerBlock {
  padding: 40px;
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(10px);
  border-radius: 24px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
  border: 1px solid rgba(195, 232, 141, 0.2);
  transform: translateX(50px);
  opacity: 0;
  position: relative;
  overflow: hidden;
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.answerBlock.animateIn {
  transform: translateX(0);
  opacity: 1;
}

.answerBlock::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 4px;
  height: 100%;
  background: linear-gradient(135deg, #C3E88D 0%, #A8D66F 100%);
}

.answerTitle {
  font-size: 24px;
  font-weight: 700;
  color: #C3E88D;
  margin-bottom: 16px;
  font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, sans-serif;
}

.answerText {
  font-size: 16px;
  color: rgba(255, 255, 255, 0.8);
  line-height: 1.8;
  margin-bottom: 32px;
  font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, sans-serif;
  white-space: pre-line;
}

.answerFeatures {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.featureItem {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 12px 16px;
  background: rgba(195, 232, 141, 0.1);
  border-radius: 12px;
  border: 1px solid rgba(195, 232, 141, 0.2);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  color: rgba(255, 255, 255, 0.9);
  font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, sans-serif;
}

.featureItem:hover {
  background: rgba(195, 232, 141, 0.15);
  transform: translateX(8px);
}

.featureIcon {
  font-size: 20px;
}

/* Culture Highlights */
.cultureHighlights {
  margin-top: 24px;
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.highlightItem {
  display: flex;
  align-items: flex-start;
  gap: 16px;
  padding: 20px;
  background: rgba(195, 232, 141, 0.08);
  border-radius: 16px;
  border: 1px solid rgba(195, 232, 141, 0.15);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.highlightItem:hover {
  background: rgba(195, 232, 141, 0.12);
  transform: translateY(-4px);
  box-shadow: 0 12px 32px rgba(0, 0, 0, 0.15);
}

.highlightIcon {
  font-size: 32px;
  margin-top: 4px;
}

.highlightText h4 {
  font-size: 16px;
  font-weight: 700;
  color: #C3E88D;
  margin-bottom: 4px;
  font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, sans-serif;
}

.highlightText p {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.7);
  font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, sans-serif;
}

/* Layout Variations - 데스크탑에서만 적용 */
@media (min-width: 769px) {
  .aboutSubsection[data-layout="answer-left"] .sectionInner {
    grid-template-columns: 1fr 1fr;
  }

  .aboutSubsection[data-layout="answer-left"] .questionBlock {
    transform: translateX(50px);
    order: 2;
  }

  .aboutSubsection[data-layout="answer-left"] .answerBlock {
    transform: translateX(-50px);
    order: 1;
  }

  .aboutSubsection[data-layout="answer-left"] .questionBlock.animateIn {
    transform: translateX(0);
  }

  .aboutSubsection[data-layout="answer-left"] .answerBlock.animateIn {
    transform: translateX(0);
  }
}

/* 반응형 */
@media (max-width: 1024px) {
  .aboutContainer {
    padding: 0 20px;
  }
  
  .sectionInner {
    gap: 40px;
  }
  
  .aboutSubsection {
    margin-bottom: 30px;
  }
}

@media (max-width: 768px) {
  .about {
    padding: 120px 0 80px 0;
  }
  
  .aboutContainer {
    padding: 0 20px;
  }
  
  .sectionInner {
    grid-template-columns: 1fr;
    gap: 40px;
  }
  
  /* 모바일에서는 모든 블록이 기본 세로 배치 */
  .questionBlock {
    transform: translateY(30px);
    order: 1;
  }
  
  .answerBlock {
    transform: translateY(30px);
    order: 2;
  }
  
  .questionBlock.animateIn {
    transform: translateY(0);
  }
  
  .answerBlock.animateIn {
    transform: translateY(0);
  }
  
  .answerBlock {
    padding: 24px;
  }
  
  .questionNumber {
    width: 50px;
    height: 50px;
    font-size: 16px;
  }
}

@media (max-width: 480px) {
  .about {
    padding: 100px 0 60px 0;
  }
  
  .section-header {
    margin-bottom: 60px;
  }
  
  /* section-title, section-subtitle는 common-landing.css에서 관리 */
  
  .visualIcon {
    font-size: 60px;
  }
  
  .visualDecoration {
    width: 100px;
    height: 100px;
  }
}

/* Flip 애니메이션 스타일 - 달력 넘기기 효과 */
.flipTextContainer {
  display: inline-block;
  position: relative;
  perspective: 1200px;
  perspective-origin: center center;
  min-width: 500px;
  height: 1.2em;
  vertical-align: baseline;
  transform-style: preserve-3d;
}

.flipCard {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
}

.flipCardFace {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  transform-origin: center bottom -10px;
  display: flex;
  align-items: center;
  justify-content: center;
  will-change: transform, opacity;
}

.flipText {
  display: inline-block;
  white-space: nowrap;
  color: #FFFFFF;
  font-weight: 700;
}

/* 기본 상태 */
.flipCardCurrent {
  transform: rotateX(0deg);
  z-index: 2;
}

.flipCardNext {
  transform: rotateX(-90deg);
  z-index: 1;
}

/* Flip 애니메이션 상태 */
.flipping {
  /* 플립 애니메이션 트리거 클래스 */
}

.flipping .flipCardCurrent {
  animation: flipOut 0.8s cubic-bezier(0.645, 0.045, 0.355, 1) forwards;
}

.flipping .flipCardNext {
  animation: flipIn 0.8s cubic-bezier(0.645, 0.045, 0.355, 1) forwards;
}

/* 달력 넘기기 애니메이션 */
@keyframes flipOut {
  0% {
    transform: rotateX(0deg) translateY(0);
    opacity: 1;
    filter: brightness(1);
  }
  50% {
    filter: brightness(0.8);
  }
  100% {
    transform: rotateX(90deg) translateY(-5px);
    opacity: 0;
    filter: brightness(0.6);
  }
}

@keyframes flipIn {
  0% {
    transform: rotateX(-90deg) translateY(5px);
    opacity: 0;
    filter: brightness(0.6);
  }
  50% {
    filter: brightness(0.8);
  }
  100% {
    transform: rotateX(0deg) translateY(0);
    opacity: 1;
    filter: brightness(1);
  }
}

/* 모바일 반응형 */
@media (max-width: 768px) {
  .flipTextContainer {
    min-width: auto;
    width: 100%;
  }
  
  .flipText {
    font-size: 0.9em;
  }
}
