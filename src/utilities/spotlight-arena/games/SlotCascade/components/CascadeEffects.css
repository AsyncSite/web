.cascade-effects {
  position: absolute;
  inset: 0;
  pointer-events: none;
  overflow: hidden;
  z-index: 20;
}

/* 캐스케이드 레벨 표시 */
.cascade-level-display {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  animation: levelAppear 1s ease-out forwards;
}

@keyframes levelAppear {
  0% {
    transform: translate(-50%, -50%) scale(0) rotate(-180deg);
    opacity: 0;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.3) rotate(10deg);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -50%) scale(1) rotate(0deg);
    opacity: 0;
  }
}

.level-text {
  font-size: 24px;
  font-weight: bold;
  letter-spacing: 4px;
  color: #ffd700;
  text-shadow: 
    0 0 20px rgba(255, 215, 0, 0.8),
    0 0 40px rgba(255, 215, 0, 0.6);
  margin-bottom: 8px;
}

.level-number {
  font-size: 48px;
  font-weight: bold;
  color: #ff6b6b;
  text-shadow: 
    0 0 20px rgba(255, 107, 107, 0.8),
    0 0 40px rgba(255, 107, 107, 0.6);
}

/* 파티클 효과 */
.particles {
  position: absolute;
  inset: 0;
}

.particle {
  position: absolute;
  border-radius: 50%;
  animation: particleFloat 2s ease-out forwards;
}

@keyframes particleFloat {
  0% {
    transform: translate(0, 0) scale(0);
    opacity: 1;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translate(
      calc(var(--random-x, 50) * 1px - 25px),
      calc(var(--random-y, -100) * 1px)
    ) scale(1);
    opacity: 0;
  }
}

/* 배경 광선 효과 */
.cascade-rays {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 200%;
  height: 200%;
  transform: translate(-50%, -50%);
  animation: raysRotate 2s linear;
}

@keyframes raysRotate {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

.ray {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 2px;
  height: 50%;
  background: linear-gradient(
    to bottom,
    transparent,
    rgba(255, 215, 0, 0.3),
    transparent
  );
  transform-origin: 50% 0;
  animation: rayPulse 1s ease-out forwards;
}

@keyframes rayPulse {
  0% {
    opacity: 0;
    transform: translateX(-50%) scaleY(0);
  }
  50% {
    opacity: 1;
    transform: translateX(-50%) scaleY(1);
  }
  100% {
    opacity: 0;
    transform: translateX(-50%) scaleY(0.5);
  }
}

/* 파티클에 랜덤 변수 추가 */
.particle:nth-child(odd) {
  --random-x: -30;
  --random-y: -120;
}

.particle:nth-child(even) {
  --random-x: 30;
  --random-y: -80;
}

.particle:nth-child(3n) {
  --random-x: 0;
  --random-y: -100;
}

.particle:nth-child(4n) {
  --random-x: -20;
  --random-y: -140;
}

.particle:nth-child(5n) {
  --random-x: 20;
  --random-y: -90;
}